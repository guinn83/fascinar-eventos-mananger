"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }// src/index.ts
var _fs = require('fs'); var _fs2 = _interopRequireDefault(_fs);
var _path = require('path'); var _path2 = _interopRequireDefault(_path);
var _rolluppluginworkbox = require('rollup-plugin-workbox');

// src/transformers/html.ts
var HTMLTransformer = (options) => ({
  apply: "post",
  transform({code, isBuild}) {
    if (!isBuild)
      return code;
    return code.replace("</head>", `
<link rel="manifest" href="/manifest.webmanifest">
<script>
  if('serviceWorker' in navigator) {
    window.addEventListener('load', () => {
      navigator.serviceWorker.register('/sw.js', { scope: './' })
    })
  }
</script>
</head>`);
  }
});

// src/index.ts
function VitePWA(options = {}) {
  const root = options.root || process.cwd();
  const pkg = JSON.parse(_fs2.default.readFileSync(_path2.default.resolve(root, "package.json"), "utf-8"));
  const outDir = options.outDir || "dist";
  const defaultWorkbox = {
    swDest: `${outDir}/sw.js`,
    globDirectory: outDir,
    offlineGoogleAnalytics: false,
    mode: process["env"]["NODE_ENV"] || "production"
  };
  const defaultManifest = {
    name: pkg.name,
    short_name: pkg.name,
    start_url: "/",
    display: "standalone",
    background_color: "#ffffff",
    lang: "en"
  };
  const workbox = Object.assign({}, defaultWorkbox, options.workbox || {});
  const manifest = Object.assign({}, defaultManifest, options.manifest || {});
  const resolvedOptions = {
    workbox,
    manifest
  };
  return {
    indexHtmlTransforms: [HTMLTransformer(resolvedOptions)],
    rollupInputOptions: {
      pluginsPostBuild: [
        _rolluppluginworkbox.generateSW.call(void 0, workbox),
        {
          name: "vite-plugin-pwa-manifest",
          async writeBundle() {
            _fs.promises.writeFile(`${outDir}/manifest.webmanifest`, `${JSON.stringify(manifest, null, 2)}
`, "utf-8");
          }
        }
      ]
    }
  };
}


exports.VitePWA = VitePWA;
