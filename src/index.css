/* Import Inter font */
@import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800;900&display=swap');

/* stylelint-disable at-rule-no-unknown */
/* Tailwind directives are processed by PostCSS/Tailwind; disable stylelint unknown at-rule check for these lines */
@import 'tailwindcss/base';
@import 'tailwindcss/components';
@import 'tailwindcss/utilities';
/* stylelint-enable at-rule-no-unknown */

/* Base styles */
* {
  box-sizing: border-box;
}

body {
  font-family: 'Inter', ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
  margin: 0;
  padding: 0;
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

#root {
  min-height: 100vh;
}

/* Ensure the page background follows the theme variables and fills the full viewport */
html, body, #root {
  height: 100%;
  background-color: var(--color-background);
  color: var(--color-text);
}

/* Custom animation delays */
.animation-delay-100 {
  animation-delay: 0.1s;
}

.animation-delay-200 {
  animation-delay: 0.2s;
}

/* Button gradient overlay - preserves primary color */
.bg-gradient-button {
  background-color: var(--color-primary);
  background-image: var(--gradient-button);
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: overlay;
}

/* Fallback for hover states on gradient buttons */
.bg-gradient-button:hover {
  background-color: var(--color-primary-hover);
  background-image: var(--gradient-button);
}

/* Danger-specific gradient overlay - preserves danger color */
.bg-gradient-danger {
  background-color: var(--color-danger);
  /* subtle light/dark overlay to give a gradient feel while keeping danger hue */
  background-image: linear-gradient(180deg, rgba(255,255,255,0.06) 0%, rgba(0,0,0,0.06) 100%);
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: overlay;
}

.bg-gradient-danger:hover {
  background-color: var(--color-danger-hover);
  background-image: linear-gradient(180deg, rgba(255,255,255,0.06) 0%, rgba(0,0,0,0.06) 100%);
}

/* Generic, variable-driven gradient overlay: components set --color-base and --color-base-hover */
.bg-gradient-driven {
  background-color: var(--color-base, var(--color-primary));
  background-image: var(--gradient-button);
  background-repeat: no-repeat;
  background-size: cover;
  background-blend-mode: overlay;
}

.bg-gradient-driven:hover {
  /* Prefer explicit --color-base-hover if provided; otherwise fall back to --color-base.
     Avoid color-mix for older browsers by using explicit hover tokens set in variant classes. */
  background-color: var(--color-base-hover, var(--color-base));
  background-image: var(--gradient-button);
}

/* Per-variant helper classes that set CSS variables consumed by .bg-gradient-driven.
  Note: they intentionally set --color-base-hover using explicit theme hover tokens to support older browsers.
  You can still override hover per-variant by defining --color-base-hover in the class if needed. */
.btn-variant-default { 
  --color-base: var(--color-primary);
  --color-base-hover: var(--color-primary-hover);
}
.btn-variant-destructive { 
  --color-base: var(--color-danger);
  --color-base-hover: var(--color-danger-hover);
}
.btn-variant-danger { 
  --color-base: var(--color-danger);
  --color-base-hover: var(--color-danger-hover);
}
.btn-variant-confirm { 
  --color-base: var(--color-success);
  --color-base-hover: var(--color-success-hover);
}
.btn-variant-edit { 
  --color-base: var(--color-surface);
  --color-base-hover: var(--color-surface-hover);
}
.btn-variant-outline { 
  --color-base: var(--color-surface);
  --color-base-hover: var(--color-surface-hover);
}
.btn-variant-ghost { 
  --color-base: transparent;
  --color-base-hover: transparent;
}

/* Utility: ensure hover class for danger exists if used in className */
.hover\:bg-danger-hover:hover { background-color: var(--color-danger-hover); }

.glass-strong {
  background: rgba(255, 255, 255, 0.15);
  -webkit-backdrop-filter: blur(30px);
  backdrop-filter: blur(30px);
  border: 1px solid rgba(255, 255, 255, 0.3);
}

/* Modern animations */
@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-10px); }
}

@keyframes glow {
  0%, 100% { box-shadow: 0 0 20px rgba(103, 126, 234, 0.3); }
  50% { box-shadow: 0 0 30px rgba(103, 126, 234, 0.6); }
}

@keyframes slideIn {
  from { transform: translateX(-100%); opacity: 0; }
  to { transform: translateX(0); opacity: 1; }
}

@keyframes fadeInUp {
  from { transform: translateY(30px); opacity: 0; }
  to { transform: translateY(0); opacity: 1; }
}

.animate-float {
  animation: float 6s ease-in-out infinite;
}

.animate-glow {
  animation: glow 2s ease-in-out infinite alternate;
}

.animate-slide-in {
  animation: slideIn 0.5s ease-out;
}

.animate-fade-in-up {
  animation: fadeInUp 0.6s ease-out;
}

/* Modern scrollbar */
::-webkit-scrollbar {
  width: 8px;
}

::-webkit-scrollbar-track {
  background: rgba(255, 255, 255, 0.1);
}

::-webkit-scrollbar-thumb {
  background: linear-gradient(135deg, #667eea, #764ba2);
  border-radius: 4px;
}

::-webkit-scrollbar-thumb:hover {
  background: linear-gradient(135deg, #764ba2, #667eea);
}

/* Modern focus styles */
.focus-modern:focus {
  outline: none;
  box-shadow: 0 0 0 3px rgba(103, 126, 234, 0.3);
  transform: scale(1.02);
  transition: all 0.2s ease;
}

/* Gradient text */
.gradient-text {
  background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
}

/* Modern button styles */
.btn-modern {
  position: relative;
  overflow: hidden;
  transition: all 0.3s ease;
}

.btn-modern::before {
  content: '';
  position: absolute;
  top: 0;
  left: -100%;
  width: 100%;
  height: 100%;
  background: linear-gradient(90deg, transparent, rgba(255,255,255,0.2), transparent);
  transition: left 0.5s;
}

.btn-modern:hover::before {
  left: 100%;
}

/* Animation delay classes */
.delay-100 {
  animation-delay: 0.1s;
}

.delay-200 {
  animation-delay: 0.2s;
}

.delay-300 {
  animation-delay: 0.3s;
}

.delay-negative-1s {
  animation-delay: -1s;
}

.delay-negative-2s {
  animation-delay: -2s;
}

.delay-negative-4s {
  animation-delay: -4s;
}

/* Background pattern utilities */
.bg-pattern-dots-light {
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%23ffffff' fill-opacity='0.05'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

.bg-pattern-dots-dark {
  background-image: url("data:image/svg+xml,%3Csvg width='60' height='60' viewBox='0 0 60 60' xmlns='http://www.w3.org/2000/svg'%3E%3Cg fill='none' fill-rule='evenodd'%3E%3Cg fill='%236366f1' fill-opacity='0.03'%3E%3Ccircle cx='30' cy='30' r='2'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
}

/* Particle background effect */
.particles-bg {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  pointer-events: none;
  z-index: -1;
}

.particle {
  position: absolute;
  background: rgba(255, 255, 255, 0.1);
  border-radius: 50%;
  animation: float 8s ease-in-out infinite;
}

.particle:nth-child(1) { top: 10%; left: 10%; width: 4px; height: 4px; animation-delay: 0s; }
.particle:nth-child(2) { top: 20%; left: 80%; width: 6px; height: 6px; animation-delay: -2s; }
.particle:nth-child(3) { top: 60%; left: 20%; width: 3px; height: 3px; animation-delay: -4s; }
.particle:nth-child(4) { top: 80%; left: 70%; width: 5px; height: 5px; animation-delay: -6s; }
.particle:nth-child(5) { top: 40%; left: 90%; width: 4px; height: 4px; animation-delay: -1s; }
.particle:nth-child(6) { top: 70%; left: 5%; width: 3px; height: 3px; animation-delay: -3s; }
.particle:nth-child(7) { top: 30%; left: 60%; width: 5px; height: 5px; animation-delay: -5s; }
.particle:nth-child(8) { top: 90%; left: 40%; width: 4px; height: 4px; animation-delay: -7s; }

/* Fallback hover for card items using CSS variable so hover works without Tailwind rebuild */
.card-item-hover:hover {
  background-color: var(--color-item-hover) !important;
}

/* Gradient utilities applied via theme variables */
.bg-gradient-card {
  background-image: var(--gradient-card);
  background-repeat: no-repeat;
  background-size: cover;
}

/* Page-level gradient background utility */
.bg-gradient-page {
  background-image: var(--gradient-page);
  background-repeat: no-repeat;
  background-size: cover;
}

/* Icon semantic color utilities (map to CSS theme variables) */
.text-icon-1 { color: var(--color-icon-1) !important; }
.text-icon-2 { color: var(--color-icon-2) !important; }
.text-icon-3 { color: var(--color-icon-3) !important; }

/* Fallback utility so bg-surface-2 works immediately with theme variables */
.bg-surface-2 { background-color: var(--color-surface-2) !important; }

/* Ensure SVG strokes using currentColor follow the icon token */
.text-icon-1 svg, .text-icon-1 [stroke="currentColor"] { stroke: var(--color-icon-1) !important; }
.text-icon-2 svg, .text-icon-2 [stroke="currentColor"] { stroke: var(--color-icon-2) !important; }
.text-icon-3 svg, .text-icon-3 [stroke="currentColor"] { stroke: var(--color-icon-3) !important; }
